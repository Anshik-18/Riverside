// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id       String  @id @default(cuid())
  name     String @unique
  email    String @unique
  Password String?
  provider String? 
  studios        StudioSession[]
  
}



model Recording {
  id          String   @id @default(cuid())
  fileUrl     String
  trackType   String   // e.g. "audio", "video"
  participant String   // "host" or "guest"
  createdAt   DateTime @default(now())
  sessionId   String
  session     StudioSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
}



// Example for your recording sessions (will use later)
model StudioSession {
  id          String   @id @default(cuid())
  title       String
  createdAt   DateTime @default(now())
  hostId      String
  tracktype    String   // e.g. "audio", "video"
  host        User     @relation(fields: [hostId], references: [id], onDelete: Cascade)
  guests      Guest[]
  recordings  Recording[]
}
model Guest {
  id         String   @id @default(cuid())
  name       String?
  email      String?
  inviteLink String   @unique
  joinedAt   DateTime?
  sessionId  String
  session    StudioSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
}
